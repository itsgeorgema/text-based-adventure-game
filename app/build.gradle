/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        // Use Java 11 for better compatibility
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'text.based.adventure.game.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Configure logging to suppress progress bar
logging.captureStandardOutput LogLevel.INFO

// Configure the run task to handle console input properly
run {
    // Set logging level to QUIET to suppress Gradle output
    logging.captureStandardOutput LogLevel.QUIET
    logging.captureStandardError LogLevel.QUIET
    
    // Ensure standard input is available for the application
    standardInput = System.in
    
    // Enable terminal input for better user experience
    jvmArgs = [
        "-Dfile.encoding=UTF-8",
        "-Djava.awt.headless=true",
        "-Dorg.gradle.daemon=false",
        "-Dorg.gradle.console=plain"
    ]
    
    // Show instructions to the user before starting the game
    doFirst {
        // Use quiet output only for our message
        println("\nStarting Art Heist Adventure game...\n")
        println("To play: Type commands like 'look', 'go north', etc. after the '>' prompt.\n")
    }
    
    // Don't overwrite the existing run_game.sh script
    doLast {
        println("\nFor better terminal experience, you can also run the game using: ./run_game.sh\n")
    }
}
